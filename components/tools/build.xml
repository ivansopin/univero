<?xml version="1.0"?>
<project name="univero installation package" default="build-package" basedir=".">
	<property name="current.build" value="1.4.3"/>
	
	<property name="tmp.dir" value="./tmp"/>
	<property name="build.dir" value="../build"/>
	<property file="last.build"/>
	
	<target name="build-package" depends="create-tmp-dir, update-build-version, copy-files, concat-files, minify-files, zip-tmp-dir, delete-tmp-dir">
		<echo>Done.</echo>
	</target>

	<target name="create-tmp-dir">
		<echo>Creating a temporary directory</echo>
		<mkdir dir="${tmp.dir}"/>
	</target>

	<target name="update-build-version">
		<echo>Updating the build version for the PHP files</echo>
		<echo file="../php/version.php">&lt;?php $APP_VERSION = "${current.build}"; ?&gt;</echo>
	</target>
	
	<target name="copy-files">
		<echo>Copying files</echo>
		
		<mkdir dir="${tmp.dir}/components"/>
			<mkdir dir="${tmp.dir}/components/css"/>
				<copy file="../css/index.css" todir="${tmp.dir}/components/css"/>
			<mkdir dir="${tmp.dir}/components/db"/>
			<mkdir dir="${tmp.dir}/components/tempjs"/>
				<copy todir="${tmp.dir}/components/tempjs">
					<resources>
						<fileset dir="../js"/>
					</resources>
				</copy>
			<mkdir dir="${tmp.dir}/components/php"/>
				<copy todir="${tmp.dir}/components/php">
					<resources>
						<fileset dir="../php">
							<exclude name="menu.php"/>
							<exclude name="settings.php"/>
						</fileset>
					</resources>
				</copy>
			<mkdir dir="${tmp.dir}/components/pics"/>
				<copy file="../pics/logo.png" todir="${tmp.dir}/components/pics"/>
		<mkdir dir="${tmp.dir}/editor"/>
			<copy todir="${tmp.dir}/editor">
				<resources>
					<fileset dir="../../editor"/>
				</resources>
			</copy>
		<mkdir dir="${tmp.dir}/index"/>
			<copy todir="${tmp.dir}/index">
				<resources>
					<fileset dir="../../index"/>
				</resources>
			</copy>
		<mkdir dir="${tmp.dir}/login"/>
			<copy todir="${tmp.dir}/login">
				<resources>
					<fileset dir="../../login"/>
				</resources>
			</copy>
		<mkdir dir="${tmp.dir}/upload"/>
			<copy todir="${tmp.dir}/upload">
				<resources>
					<fileset dir="../../upload"/>
				</resources>
			</copy>
		<mkdir dir="${tmp.dir}/setup"/>
			<copy todir="${tmp.dir}/setup">
				<resources>
					<fileset dir="../../setup"/>
				</resources>
			</copy>
		
		<copy file="index.php" todir="${tmp.dir}"/>
		
		<copy file="menu.php" todir="${tmp.dir}/components/php"/>
		
		<copy file="settings.php" todir="${tmp.dir}/components/php"/>
	</target>

	<target name="concat-files">
		<echo>Concatenating files</echo>
		<concat destfile="${tmp.dir}/components/tempjs/univero.js">
			<fileset file="${tmp.dir}/components/tempjs/base.js"/>
			<fileset file="${tmp.dir}/components/tempjs/ajax.js"/>
			
			<fileset file="${tmp.dir}/components/tempjs/commons.js"/>
			<fileset file="${tmp.dir}/components/tempjs/balloon.js"/>
			<fileset file="${tmp.dir}/components/tempjs/parser.js"/>
			
			<fileset file="${tmp.dir}/components/tempjs/patent.js"/>
			<fileset file="${tmp.dir}/components/tempjs/journal.js"/>
			<fileset file="${tmp.dir}/components/tempjs/magazine.js"/>
			<fileset file="${tmp.dir}/components/tempjs/chapter.js"/>
			<fileset file="${tmp.dir}/components/tempjs/proceeding.js"/>
			<fileset file="${tmp.dir}/components/tempjs/report.js"/>
			<fileset file="${tmp.dir}/components/tempjs/presentation.js"/>
			<fileset file="${tmp.dir}/components/tempjs/multimedia.js"/>
		</concat>
	</target>
	
	<taskdef name="yuicompress" classname="com.yahoo.platform.yui.compressor.YUICompressTask">
		<classpath>
			<fileset dir="c:/Program Files (x86)/yuicompressor/build">
				<include name="*.jar"/>
			</fileset>
		</classpath>
	</taskdef>
	
	<target name="minify-files">
		<echo>Minifying files</echo>
		<yuicompress munge="yes" linebreak="5000" preserveallsemicolons="yes" outputfolder="${tmp.dir}/components/js">
			<fileset dir="${tmp.dir}/components/tempjs">
				<include name="univero.js"/>
				<include name="process.js"/>
				<include name="service.js"/>
			</fileset>
		</yuicompress>
		<delete dir="${tmp.dir}/components/tempjs"/>
	</target>
	
	<!--
	<target name="is-same-build">
		<condition property="same" >
			<equals arg1="${last.build}" arg2="${current.build}" />
		</condition>		
	</target>
	
	<target name="rename-previous-build" depends="is-same-build" unless="same">
		<echo>This is a different build; renaming the old build file</echo>
		<move file="${build.dir}/univero-${current.build}.zip" tofile="${build.dir}/univero-${last.build}.zip"/>
		<echo file="last.build">last.build=${current.build}</echo>
	</target>
	
	<target name="zip-tmp-dir" depends="rename-previous-build">
		<echo>Creating a new ZIP with the build</echo>
		<zip destfile="${build.dir}/univero-${current.build}.zip" basedir="${tmp.dir}"/>
	</target>
	-->
	
	<target name="zip-tmp-dir">
		<echo>Creating a new ZIP with the build</echo>
		<zip destfile="${build.dir}/univero-${current.build}.zip" basedir="${tmp.dir}"/>
	</target>
	
	<target name="delete-tmp-dir">
		<echo>Deleting the temporary directory</echo>
		<delete dir="${tmp.dir}"/>
	</target>
	
</project>
